[package]
name = "gafi-service"
version = "4.0.0-dev"
description = "A fresh FRAME-based Substrate node, ready for hacking."
authors = ["Substrate DevHub <https://github.com/substrate-developer-hub>"]
homepage = "https://substrate.io/"
edition = "2021"
license = "MIT-0"
publish = false
repository = "https://github.com/substrate-developer-hub/substrate-node-template/"

[dependencies]
clap = { version = "4.2.5", features = ["derive"] }
futures = { version = "0.3.21", features = ["thread-pool"] }
hex-literal = "0.4.1"

sc-cli = { workspace = true }
sp-core = { workspace = true, default-features = false }
sc-executor = { workspace = true }
sc-network = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sc-offchain = { workspace = true }
sc-consensus-aura = { workspace = true }
sp-consensus-aura = { workspace = true, default-features = false }
sc-consensus = { workspace = true }
sc-consensus-grandpa = { workspace = true }
sp-consensus-grandpa = { workspace = true, default-features = false }
sc-client-api = { workspace = true }
sp-runtime = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
sp-timestamp = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sp-keyring = { workspace = true }
frame-system = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }

# These dependencies are used for the node template's RPCs
jsonrpsee = { version = "0.20.1", features = ["server"] }
sp-api = { workspace = true, default-features = false }
sc-rpc-api = { workspace = true }
sp-blockchain = { workspace = true }
sp-block-builder = { workspace = true, default-features = false }
sc-basic-authorship = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }

# These dependencies are used for runtime benchmarking
frame-benchmarking = { workspace = true, default-features = false }
frame-benchmarking-cli = { workspace = true }

# Polkadot Primitives
polkadot-core-primitives = { git = "https://github.com/paritytech/polkadot", branch = "release-v1.0.0" }


# Local Dependencies
devnet-runtime = { version = "4.0.0-dev", path = "../../runtime/devnet", optional = true }
testnet-runtime = { version = "4.0.0-dev", path = "../../runtime/testnet", optional = true }
gafi-support = { version = "4.0.0-dev", default-features = false, path = "../../support" }

# CLI-specific dependencies
try-runtime-cli = { workspace = true, optional = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[features]
default = []

devnet-native = ["devnet-runtime"]
testnet-native = ["testnet-runtime"]


# Dependencies that are only required if runtime benchmarking should be build.
runtime-benchmarks = [
	"devnet-runtime?/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-benchmarking-cli/runtime-benchmarks",
]
# Enable features that allow the runtime to be tried and debugged. Name might be subject to change
# in the near future.
try-runtime = [
	"devnet-runtime?/try-runtime",
	"testnet-runtime?/try-runtime",
	"try-runtime-cli/try-runtime",
]
