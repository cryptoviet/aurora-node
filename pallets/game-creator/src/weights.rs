
//! Autogenerated weights for `game_creator`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-05-13, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/gafi-node
// benchmark
// pallet
// --chain
// dev
// --wasm-execution
// compiled
// --pallet
// game_creator
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// ./benchmarking/game-creator/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;
use frame_support::weights::constants::RocksDbWeight;


pub trait WeightInfo {
    fn claim_contract(s: u64) -> Weight;
    fn change_ownership(s: u64) -> Weight;
    fn withdraw_contract(s: u64) -> Weight;
}

/// Weight functions for `game_creator`.
pub struct GameCreatorWeight<T>(PhantomData<T>);


impl<T: frame_system::Config> WeightInfo for GameCreatorWeight<T> {
	// Storage: GameCreator ContractOwner (r:1 w:1)
	// Storage: EVM Creators (r:1 w:0)
	// Storage: ProofAddressMapping H160Mapping (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	fn claim_contract(_s: u64, ) -> Weight {
		Weight::from_ref_time(20_833_000u64)
			.saturating_add(T::DbWeight::get().reads(8u64))
			.saturating_add(T::DbWeight::get().writes(4u64))
	}
	// Storage: GameCreator ContractOwner (r:1 w:1)
	// Storage: EVM Creators (r:1 w:0)
	// Storage: ProofAddressMapping H160Mapping (r:1 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	fn change_ownership(s: u64, ) -> Weight {
		Weight::from_ref_time(22_833_000u64)
			// Standard Error: 166_000
			.saturating_add(Weight::from_ref_time(167_000u64).saturating_mul(s))
			.saturating_add(T::DbWeight::get().reads(9u64))
			.saturating_add(T::DbWeight::get().writes(5u64))
	}
	// Storage: GameCreator ContractOwner (r:1 w:1)
	// Storage: EVM Creators (r:1 w:0)
	// Storage: ProofAddressMapping H160Mapping (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	fn withdraw_contract(_s: u64, ) -> Weight {
		Weight::from_ref_time(20_000_000u64)
			.saturating_add(T::DbWeight::get().reads(8u64))
			.saturating_add(T::DbWeight::get().writes(4u64))
	}
}

impl WeightInfo for () {
	fn claim_contract(_s: u64, ) -> Weight {
		Weight::from_ref_time(20_833_000u64)
			.saturating_add(RocksDbWeight::get().reads(8u64))
			.saturating_add(RocksDbWeight::get().writes(4u64))
	}
	
	fn change_ownership(s: u64, ) -> Weight {
		Weight::from_ref_time(22_833_000u64)
			.saturating_add(Weight::from_ref_time(167_000u64).saturating_mul(s))
			.saturating_add(RocksDbWeight::get().reads(9u64))
			.saturating_add(RocksDbWeight::get().writes(5u64))
	}
	
	fn withdraw_contract(_s: u64, ) -> Weight {
		Weight::from_ref_time(20_000_000u64)
			.saturating_add(RocksDbWeight::get().reads(8u64))
			.saturating_add(RocksDbWeight::get().writes(4u64))
	}
}
