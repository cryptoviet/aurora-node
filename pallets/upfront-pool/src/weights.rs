//! Autogenerated weights for `upfront_pool`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-03-17, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/gafi-node
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// upfront_pool
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --json-file=raw.json
// --output
// ./pallets/src/pool/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
	fn join(s: u32,) -> Weight;
	fn leave(s: u32,) -> Weight;
}

/// Weight functions for `upfront_pool`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Pool Players (r:1 w:1)
	// Storage: Pool PlayerCount (r:1 w:1)
	// Storage: Pool MaxPlayer (r:1 w:0)
	// Storage: Pool NewPlayers (r:1 w:1)
	// Storage: Pool Services (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	// Storage: Balances TotalIssuance (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	fn join(s: u32, ) -> Weight {
		(39_722_000 as Weight)
			// Standard Error: 244_000
			.saturating_add((167_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(12 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}

	// Storage: Pool Players (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Pool TimeService (r:1 w:0)
	// Storage: Pool Services (r:1 w:0)
	// Storage: Pool NewPlayers (r:1 w:1)
	// Storage: Pool IngamePlayers (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	// Storage: Balances TotalIssuance (r:1 w:1)
	fn leave(s: u32, ) -> Weight {
		(40_667_000 as Weight)
			// Standard Error: 169_000
			.saturating_add((500_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(12 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
}

impl WeightInfo for () {
	
	fn join(s: u32, ) -> Weight {
		(39_722_000 as Weight)
			// Standard Error: 244_000
			.saturating_add((167_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(12 as Weight))
			.saturating_add(RocksDbWeight::get().writes(7 as Weight))
	}

	fn leave(s: u32, ) -> Weight {
		(40_667_000 as Weight)
			// Standard Error: 169_000
			.saturating_add((500_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(12 as Weight))
			.saturating_add(RocksDbWeight::get().writes(7 as Weight))
	}
}
